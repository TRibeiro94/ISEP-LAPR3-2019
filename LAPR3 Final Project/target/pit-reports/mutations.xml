<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>adjVertices</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testAdjVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>adjVertices</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testAdjVertices()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::adjVertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>adjVertices</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTest/><description>mutated return of Object value for lapr/project/model/Graph::adjVertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>allkeyVerts</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>19</block><killingTest>lapr.project.model.GraphTest.testAllkeyVerts()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::allkeyVerts to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Graph;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>21</block><killingTest>lapr.project.model.GraphTest.testClone()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Graph;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>99</index><block>29</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::clone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>17</block><killingTest>lapr.project.model.GraphTest.testNumVertices()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::edges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>lapr.project.model.GraphTest.testEndVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>lapr.project.model.GraphTest.testEndVerticesStandard()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>7</block><killingTest>lapr.project.model.GraphTest.testEndVerticesStandard()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>14</block><killingTest>lapr.project.model.GraphTest.testEndVerticesStandard()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>lapr.project.model.GraphTest.testEndVertices()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::endVertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>8</block><killingTest/><description>mutated return of Object value for lapr/project/model/Graph::endVertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>15</block><killingTest/><description>mutated return of Object value for lapr/project/model/Graph::endVertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>endVertices</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)[Ljava/lang/Object;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>17</block><killingTest>lapr.project.model.GraphTest.testEndVerticesStandard()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::endVertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GraphTest.testEqualsDifferentClasses()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>lapr.project.model.GraphTest.testEqualsDifferentClasses()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>10</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>25</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>28</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.GraphTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>lapr.project.model.GraphTest.testEqualsDifferentClasses()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>11</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>103</index><block>29</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>112</index><block>31</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Llapr/project/model/Edge;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testEndVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Llapr/project/model/Edge;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>lapr.project.model.GraphTest.testInsertEdge2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Llapr/project/model/Edge;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>lapr.project.model.GraphTest.testEndVertices()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::getEdge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Llapr/project/model/Edge;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>lapr.project.model.GraphTest.testEndVertices()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::getEdge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>getKey</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>lapr.project.model.GraphTest.testGetKey()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>getMap</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GraphTest.testGetMap()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::getMap to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.GraphTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTest>lapr.project.model.GraphTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>0</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>0</block><killingTest>lapr.project.model.GraphTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>1</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>1</block><killingTest>lapr.project.model.GraphTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>inDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>11</block><killingTest>lapr.project.model.GraphTest.testInDegree()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>inDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testInDegree()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>inDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>10</block><killingTest>lapr.project.model.GraphTest.testInDegree()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>inDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testInDegree()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>inDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>13</block><killingTest>lapr.project.model.GraphTest.testInDegree()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>incomingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testNumVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>incomingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>12</block><killingTest>lapr.project.model.GraphTest.testIncomingEdges()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>incomingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testIncomingEdges2()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::incomingEdges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>incomingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>16</block><killingTest>lapr.project.model.GraphTest.testNumVertices()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::incomingEdges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>15</block><killingTest>lapr.project.model.GraphTest.testToString2()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>20</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.model.GraphTest.testInsertEdge2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTest>lapr.project.model.GraphTest.testEndVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>8</block><killingTest>lapr.project.model.GraphTest.testNumEdges()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>15</block><killingTest>lapr.project.model.GraphTest.testToString2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>17</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>lapr.project.model.GraphTest.testInsertEdge2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>117</index><block>21</block><killingTest>lapr.project.model.GraphTest.testInsertEdge2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>14</block><killingTest>lapr.project.model.GraphTest.testInsertEdge2()</killingTest><description>removed call to lapr/project/model/Vertex::addAdjVert</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;D)Z</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>19</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>removed call to lapr/project/model/Vertex::addAdjVert</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>5</block><killingTest>lapr.project.model.GraphTest.testToString2()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testValidVertex2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testInsertVertex2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>5</block><killingTest>lapr.project.model.GraphTest.testInsertVertex2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>isDirected</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GraphTest.testIsDirected2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>numEdges</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GraphTest.testNumEdges()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>numVertices</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>opposite</mutatedMethod><methodDescription>(Ljava/lang/Object;Llapr/project/model/Edge;)Ljava/lang/Object;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testOpposite()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>opposite</mutatedMethod><methodDescription>(Ljava/lang/Object;Llapr/project/model/Edge;)Ljava/lang/Object;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest/><description>mutated return of Object value for lapr/project/model/Graph::opposite to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>opposite</mutatedMethod><methodDescription>(Ljava/lang/Object;Llapr/project/model/Edge;)Ljava/lang/Object;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>5</block><killingTest>lapr.project.model.GraphTest.testOpposite()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::opposite to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>outDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testOutDegree()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>outDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testOutDegree()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>outDegree</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTest>lapr.project.model.GraphTest.testOutDegree()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>outgoingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testOutgoingEdges2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>outgoingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testOutgoingEdges2()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::outgoingEdges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>outgoingEdges</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Iterable;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTest>lapr.project.model.GraphTest.testEqualsBooleanCondition()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::outgoingEdges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>10</block><killingTest>lapr.project.model.GraphTest.testNumEdges()</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>15</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testNumEdges()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>lapr.project.model.GraphTest.testNumEdges()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest>lapr.project.model.GraphTest.testNumEdges()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>lapr.project.model.GraphTest.testRemoveEdge()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>7</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>95</index><block>16</block><killingTest>lapr.project.model.GraphTest.testRemoveEdge()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>9</block><killingTest>lapr.project.model.GraphTest.testGetEdge()</killingTest><description>removed call to lapr/project/model/Vertex::remAdjVert</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Z</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>14</block><killingTest/><description>removed call to lapr/project/model/Vertex::remAdjVert</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>22</block><killingTest>lapr.project.model.GraphTest.testRemoveVertex2()</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>25</block><killingTest>lapr.project.model.GraphTest.testNumVertices()</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testNumVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>21</block><killingTest>lapr.project.model.GraphTest.testRemoveVertex2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphTest.testRemoveVertex2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>25</block><killingTest>lapr.project.model.GraphTest.testRemoveVertex2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>removeVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>22</block><killingTest>lapr.project.model.GraphTest.testRemoveVertex2()</killingTest><description>removed call to lapr/project/model/Vertex::setKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.GraphTest.testToString()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>10</block><killingTest>lapr.project.model.GraphTest.testToString()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>validVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.model.GraphTest.testAdjVertices()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>validVertex</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>lapr.project.model.GraphTest.testAdjVertices()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Graph.java</sourceFile><mutatedClass>lapr.project.model.Graph</mutatedClass><mutatedMethod>vertices</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphTest.testInsertVertex()</killingTest><description>mutated return of Object value for lapr/project/model/Graph::vertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>2</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>8</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection2()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>8</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection2()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>2</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateAverageSpeedWithWindDirection</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>8</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection2()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateAverageSpeedWithWindDirection</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateAverageSpeedWithWindDirection</mutatedMethod><methodDescription>(FFF)D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>9</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateAverageSpeedWithWindDirection3()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateAverageSpeedWithWindDirection</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>4</block><killingTest/><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateCalories</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateCalories</mutatedMethod><methodDescription>(DDDDFDFFDDDDDD)D</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>5</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateCalories</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceAScooterCanDo</mutatedMethod><methodDescription>(IDI)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceAScooterCanDo()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateDistanceAScooterCanDo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>8</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>8</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>9</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>9</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>10</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>10</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>11</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>13</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>13</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>13</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>13</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>15</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateDistanceWithElevation</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>16</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateDistanceWithElevation()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateDistanceWithElevation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergySpentBetweenPoints</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergySpentBetweenPoints</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergySpentBetweenPoints</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergySpentBetweenPoints</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateEnergySpentBetweenPoints</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergyforGivenTrip</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergyforGivenTrip()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergyforGivenTrip</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergyforGivenTrip()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateEnergyforGivenTrip</mutatedMethod><methodDescription>(DDDDDFFDDDDDD)D</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergyforGivenTrip()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateEnergyforGivenTrip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateFrictionalForce</mutatedMethod><methodDescription>(DDDDDDDDD)D</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateFrictionalForce()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateFrictionalForce</mutatedMethod><methodDescription>(DDDDDDDDD)D</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateFrictionalForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateFrictionalForce</mutatedMethod><methodDescription>(DDDDDDDDD)D</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>2</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateFrictionalForce()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateFrictionalForce</mutatedMethod><methodDescription>(DDDDDDDDD)D</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateFrictionalForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateFrictionalForce</mutatedMethod><methodDescription>(DDDDDDDDD)D</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateFrictionalForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateFrictionalForce</mutatedMethod><methodDescription>(DDDDDDDDD)D</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateFrictionalForce()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateFrictionalForce</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateGravitationalForce</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateGravitationalForce()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateGravitationalForce</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateGravitationalForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateGravitationalForce</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateGravitationalForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateGravitationalForce</mutatedMethod><methodDescription>(DDDDDDDD)D</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateGravitationalForce()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateGravitationalForce</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculatePathInclination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculatePathInclination()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculatePathInclination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculatePathInclination()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculatePathInclination</mutatedMethod><methodDescription>(DDDDDD)D</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculatePathInclination()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculatePathInclination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>2</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateTimeNeededToChargeTotaly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotaly</mutatedMethod><methodDescription>(DDDII)D</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>4</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateTimeNeededToChargeTotaly()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateTimeNeededToChargeTotaly</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTotalForce</mutatedMethod><methodDescription>(DDDDDDFDFFDDDD)D</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTotalForce</mutatedMethod><methodDescription>(DDDDDDFDFFDDDD)D</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateEnergySpentBetweenPoints()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateTotalForce</mutatedMethod><methodDescription>(DDDDDDFDFFDDDD)D</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>3</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateTotalForce</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateWindeForce</mutatedMethod><methodDescription>(DFDF)D</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateWindeForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateWindeForce</mutatedMethod><methodDescription>(DFDF)D</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateCalories()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateWindeForce</mutatedMethod><methodDescription>(DFDF)D</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>0</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateWindeForce()</killingTest><description>Replaced float subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateWindeForce</mutatedMethod><methodDescription>(DFDF)D</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateWindeForce()</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>calculateWindeForce</mutatedMethod><methodDescription>(DFDF)D</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculateWindeForce()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::calculateWindeForce</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>deg2rad</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>deg2rad</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>deg2rad</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTest/><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::deg2rad</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhysicsAlgorithms.java</sourceFile><mutatedClass>lapr.project.utils.PhysicsAlgorithms</mutatedClass><mutatedMethod>linearDistanceTo</mutatedMethod><methodDescription>(DDDD)D</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>lapr.project.utils.PhysicsAlgorithmsTest.testCalculatePathInclination()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/utils/PhysicsAlgorithms::linearDistanceTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><block>8</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>9</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>3</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEdges()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>edges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>10</block><killingTest/><description>mutated return of Object value for lapr/project/model/AdjacencyMatrix::edges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals5()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode3()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals6()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>7</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals5()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>10</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode3()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>13</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode3()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>8</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals5()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>11</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals9()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>15</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode3()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;)Ljava/lang/Double;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;)Ljava/lang/Double;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;)Ljava/lang/Double;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>2</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testGetEdge()</killingTest><description>mutated return of Object value for lapr/project/model/AdjacencyMatrix::getEdge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;)Ljava/lang/Double;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>5</block><killingTest/><description>mutated return of Object value for lapr/project/model/AdjacencyMatrix::getEdge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;)Ljava/lang/Double;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>6</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>mutated return of Object value for lapr/project/model/AdjacencyMatrix::getEdge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>0</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>0</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>1</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>1</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>2</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>2</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(IILjava/lang/Double;)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>1</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(IILjava/lang/Double;)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>7</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testEquals9()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testInsertEdge_3args_2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>5</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>10</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>12</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertEdge</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/lang/Double;)Z</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>11</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>removed call to lapr/project/model/AdjacencyMatrix::insertEdge</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>4</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testInsertVertex()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;)Z</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>2</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>5</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testInsertVertex()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>insertVertex</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>4</block><killingTest/><description>removed call to lapr/project/model/AdjacencyMatrix::resizeMatrix</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>numEdges</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>numVertices</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>privateGet</mutatedMethod><methodDescription>(II)Ljava/lang/Double;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testPrivateGet()</killingTest><description>mutated return of Object value for lapr/project/model/AdjacencyMatrix::privateGet to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>resizeMatrix</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>resizeMatrix</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>resizeMatrix</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTest/><description>Replaced float multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>resizeMatrix</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testInsertVertex()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>resizeMatrix</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>toIndex</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;)I</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.model.AdjacencyMatrixTest.testToIndex()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AdjacencyMatrix.java</sourceFile><mutatedClass>lapr.project.model.AdjacencyMatrix</mutatedClass><mutatedMethod>vertices</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>mutated return of Object value for lapr/project/model/AdjacencyMatrix::vertices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Edge;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>1</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::clone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testCompareTo()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testCompareTo()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>2</block><killingTest>lapr.project.model.EdgeTest.testCompareTo()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>1</block><killingTest>lapr.project.model.EdgeTest.testCompareTo()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTest>lapr.project.model.EdgeTest.testCompareTo()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Ljava/lang/Object;)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>4</block><killingTest>lapr.project.model.EdgeTest.testCompareTo()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>9</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>13</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>14</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>17</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>27</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>11</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>16</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>94</index><block>21</block><killingTest>lapr.project.model.GraphTest.testOpposite()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>115</index><block>26</block><killingTest>lapr.project.model.GraphTest.testOpposite()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>128</index><block>28</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>145</index><block>32</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>150</index><block>33</block><killingTest>lapr.project.model.EdgeTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getElement</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testGetElement()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getElement to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testGetEndpoints()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>3</block><killingTest>lapr.project.model.EdgeTest.testGetEndpoints()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>6</block><killingTest>lapr.project.model.EdgeTest.testGetEndpoints()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>7</block><killingTest>lapr.project.model.EdgeTest.testGetEndpoints()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>8</block><killingTest>lapr.project.model.EdgeTest.testGetEndpoints()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getEndpoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getEndpoints</mutatedMethod><methodDescription>()[Ljava/lang/Object;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>15</block><killingTest>lapr.project.model.EdgeTest.testGetEndpoints()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getEndpoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getVDest</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testGetVDest()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getVDest</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>lapr.project.model.EdgeTest.testGetVDest()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getVDest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getVDest</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>3</block><killingTest>lapr.project.model.EdgeTest.testGetVDest()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getVDest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getVOrig</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testGetVOrig()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getVOrig</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTest>lapr.project.model.EdgeTest.testGetVOrig()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getVOrig to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getVOrig</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>3</block><killingTest>lapr.project.model.EdgeTest.testGetVOrig()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::getVOrig to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testGetWeight()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Edge::getWeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.EdgeTest.testToString()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>lapr.project.model.EdgeTest.testToString()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Edge.java</sourceFile><mutatedClass>lapr.project.model.Edge</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>85</index><block>28</block><killingTest>lapr.project.model.EdgeTest.testToString()</killingTest><description>mutated return of Object value for lapr/project/model/Edge::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;[ILjava/util/LinkedList;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;[ILjava/util/LinkedList;)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>5</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;[ILjava/util/LinkedList;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>6</block><killingTest/><description>removed call to java/util/LinkedList::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>getPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;[ILjava/util/LinkedList;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>8</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>removed call to java/util/LinkedList::addFirst</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>11</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>3</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>11</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>24</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>4</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/GraphAlgorithms::shortestPath</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>125</index><block>25</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/GraphAlgorithms::shortestPath</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>143</index><block>28</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/GraphAlgorithms::shortestPath</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>21</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>removed call to lapr/project/model/GraphAlgorithms::shortestPathLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><block>22</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>removed call to java/util/LinkedList::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPath</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/LinkedList;)D</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><block>26</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>removed call to lapr/project/model/GraphAlgorithms::getPath</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>130</index><block>31</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><block>34</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPath()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>158</index><block>37</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>20</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>24</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>11</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>16</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>20</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>31</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>32</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>34</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPathLength</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;[Ljava/lang/Object;[Z[I[D)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>45</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>6</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>12</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><block>17</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><block>7</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>103</index><block>15</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>160</index><block>24</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>6</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>12</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>17</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>19</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>2</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPathsFirstCondition()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>166</index><block>25</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>8</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>removed call to lapr/project/model/GraphAlgorithms::shortestPathLength</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>9</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>10</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GraphAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.GraphAlgorithms</mutatedClass><mutatedMethod>shortestPaths</mutatedMethod><methodDescription>(Llapr/project/model/Graph;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>20</block><killingTest>lapr.project.model.GraphAlgorithmsTest.testShortestPaths()</killingTest><description>removed call to lapr/project/model/GraphAlgorithms::getPath</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Vertex;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>12</block><killingTest>lapr.project.model.VertexTest.testClone()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::clone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Vertex;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>1</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>removed call to lapr/project/model/Vertex::setKey</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Vertex;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>2</block><killingTest/><description>removed call to lapr/project/model/Vertex::setElement</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>clone</mutatedMethod><methodDescription>()Llapr/project/model/Vertex;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>10</block><killingTest>lapr.project.model.VertexTest.testClone()</killingTest><description>removed call to lapr/project/model/Vertex::addAdjVert</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>12</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>16</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><block>27</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>31</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>33</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>13</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>17</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>126</index><block>34</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>135</index><block>36</block><killingTest>lapr.project.model.VertexTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getAdjVert</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)Ljava/lang/Object;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>8</block><killingTest>lapr.project.model.VertexTest.testGetAdjVert()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getAdjVert</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)Ljava/lang/Object;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>9</block><killingTest>lapr.project.model.VertexTest.testGetAdjVert()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::getAdjVert to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getAdjVert</mutatedMethod><methodDescription>(Llapr/project/model/Edge;)Ljava/lang/Object;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>11</block><killingTest>lapr.project.model.VertexTest.testGetAdjVert()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::getAdjVert to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getAllAdjVerts</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.VertexTest.testGetAllAdjVerts()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::getAllAdjVerts to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getAllOutEdges</mutatedMethod><methodDescription>()Ljava/lang/Iterable;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.VertexTest.testGetAllOutEdges()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::getAllOutEdges to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getEdge</mutatedMethod><methodDescription>(Ljava/lang/Object;)Llapr/project/model/Edge;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>lapr.project.model.VertexTest.testGetEdge()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::getEdge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getElement</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VertexTest.testGetElement()</killingTest><description>mutated return of Object value for lapr/project/model/Vertex::getElement to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>getKey</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VertexTest.testGetKey()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>numAdjVerts</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.model.VertexTest.testAddAdjVert()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Vertex.java</sourceFile><mutatedClass>lapr.project.model.Vertex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>22</block><killingTest/><description>mutated return of Object value for lapr/project/model/Vertex::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>8</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>9</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>10</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals3()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>13</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals10()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>getElevation</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GeographicalLocationTest.testGetElevation()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/GeographicalLocation::getElevation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>getLatitude</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GeographicalLocationTest.testGetLatitude()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/GeographicalLocation::getLatitude</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>getLongitude</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.GeographicalLocationTest.testGetLongitude()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/GeographicalLocation::getLongitude</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>2</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>2</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>2</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>2</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>4</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>4</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>4</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>4</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>6</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>6</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>6</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeographicalLocation.java</sourceFile><mutatedClass>lapr.project.model.GeographicalLocation</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>6</block><killingTest>lapr.project.model.GeographicalLocationTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>addPOI</mutatedMethod><methodDescription>(DDDLjava/lang/String;)Llapr/project/model/PointInterest;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><block>4</block><killingTest>lapr.project.controller.ParkControllerTest.testAddPOI()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::addPOI to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>addPOI</mutatedMethod><methodDescription>(DDDLjava/lang/String;)Llapr/project/model/PointInterest;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>3</block><killingTest>lapr.project.controller.ParkControllerTest.testAddPOI()</killingTest><description>removed call to lapr/project/model/PointInterest::setIdPoint</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>addPark</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;IIIDDDII)Llapr/project/model/Park;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>10</block><killingTest>lapr.project.controller.ParkControllerTest.testAddPark()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::addPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>addPark</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;IIIDDDII)Llapr/project/model/Park;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>7</block><killingTest/><description>removed call to lapr/project/model/Park::setCapacity</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>addPark</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;IIIDDDII)Llapr/project/model/Park;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>9</block><killingTest>lapr.project.controller.ParkControllerTest.testAddPark()</killingTest><description>removed call to lapr/project/model/Park::setIdPoint</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>addPath</mutatedMethod><methodDescription>(IIDFF)Z</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>4</block><killingTest>lapr.project.controller.ParkControllerTest.testAddPath()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotalyByPark</mutatedMethod><methodDescription>(I)Ljava/util/LinkedList;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testCalculateTimeNeededToChargeTotalyByPark()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::calculateTimeNeededToChargeTotalyByPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>calculateTimeNeededToChargeTotalyByScooter</mutatedMethod><methodDescription>(ILjava/lang/String;)Ljavafx/util/Pair;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testCalculateTimeNeededToChargeTotalyByScooter()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::calculateTimeNeededToChargeTotalyByScooter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>checkParkFreeBicycleSpots</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testCheckParkFreeBicycleSpots()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>checkParkFreeScooterSpots</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testCheckParkFreeScooterSpots()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>checkParkFreeSpots</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testCheckParkFreeSpots()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getAllParks</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testGetAllParks()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getAllParks to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getNearestParks</mutatedMethod><methodDescription>(DDD)Ljava/util/List;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>2</block><killingTest>lapr.project.controller.ParkControllerTest.testGetNearestParks()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getNearestParks to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getPark</mutatedMethod><methodDescription>(I)Llapr/project/model/Park;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testGetPark()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getParkByCoordinates</mutatedMethod><methodDescription>(DD)Llapr/project/model/Park;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testGetIdParkByCoordinates()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getParkByCoordinates to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getParkByRefPark</mutatedMethod><methodDescription>(Ljava/lang/String;)Llapr/project/model/Park;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testGetIdParkByRefPark()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getParkByRefPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getParkByVehicleID</mutatedMethod><methodDescription>(I)Llapr/project/model/Park;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testGetParkByVehicleID()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getParkByVehicleID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getPathByIdParks</mutatedMethod><methodDescription>(II)Llapr/project/model/Path;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest/><description>mutated return of Object value for lapr/project/controller/ParkController::getPathByIdParks to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>getPointByCoordinates</mutatedMethod><methodDescription>(DD)Llapr/project/model/PointInterest;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testGetPointByCoordinates()</killingTest><description>mutated return of Object value for lapr/project/controller/ParkController::getPointByCoordinates to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>parkVehicle</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>parkVehicle</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>parkVehicle</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>6</block><killingTest/><description>removed call to lapr/project/data/EmailHandler::sendLockedVehicleEmail</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>parkVehicle</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>8</block><killingTest/><description>removed call to java/lang/NullPointerException::printStackTrace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>removePark</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testRemovePark()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParkController.java</sourceFile><mutatedClass>lapr.project.controller.ParkController</mutatedClass><mutatedMethod>updatePark</mutatedMethod><methodDescription>(ILjava/lang/String;)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>1</block><killingTest>lapr.project.controller.ParkControllerTest.testUpdatePark()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testEquals10()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.ScooterTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>lapr.project.model.ScooterTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>8</block><killingTest>lapr.project.model.ScooterTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>9</block><killingTest>lapr.project.model.ScooterTest.testEquals10()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTest>lapr.project.model.ScooterTest.testEquals11()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.ScooterTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>lapr.project.model.ScooterTest.testEquals2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>lapr.project.model.GeographicalLocationTest.testEquals3()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>13</block><killingTest>lapr.project.model.ScooterTest.testEquals10()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>getActualBatteryCapacity</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testGetActual_batery_capacity()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>getMaxBatteryCapacity</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testGetMax_batery_capacity()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>getMotor</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testGetMotor()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testSetType()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>0</block><killingTest>lapr.project.model.ScooterTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Scooter.java</sourceFile><mutatedClass>lapr.project.model.Scooter</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>9</block><killingTest>lapr.project.model.ScooterTest.testToString()</killingTest><description>mutated return of Object value for lapr/project/model/Scooter::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>1</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>3</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>10</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>156</index><block>39</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>169</index><block>41</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>174</index><block>42</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>179</index><block>43</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>25</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>1</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>8</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>10</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>14</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>15</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>16</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>29</block><killingTest>lapr.project.model.MatrixAlgorithmsTest.testTransitiveClosure()</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>39</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MatrixAlgorithms.java</sourceFile><mutatedClass>lapr.project.model.MatrixAlgorithms</mutatedClass><mutatedMethod>transitiveClosure</mutatedMethod><methodDescription>(Llapr/project/model/AdjacencyMatrix;Ljava/lang/Double;)Llapr/project/model/AdjacencyMatrix;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>185</index><block>44</block><killingTest/><description>mutated return of Object value for lapr/project/model/MatrixAlgorithms::transitiveClosure to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.test2Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.VehicleTest.test2Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>lapr.project.model.VehicleTest.test4Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>10</block><killingTest>lapr.project.model.VehicleTest.test4Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.VehicleTest.test3Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>lapr.project.model.VehicleTest.test2Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>lapr.project.model.VehicleTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>13</block><killingTest>lapr.project.model.VehicleTest.test4Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>getAerodynamicCoefficient</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testGetAerodynamicCoefficient()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Vehicle::getAerodynamicCoefficient</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>getDescription</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testGetDescription()</killingTest><description>mutated return of Object value for lapr/project/model/Vehicle::getDescription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>getFrontalArea</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testGetFrontalArea()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Vehicle::getFrontalArea</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>getId</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testGetId()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>getState</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testToString()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testGetWeight()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Vehicle::getWeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.VehicleTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>lapr.project.model.VehicleTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>1</block><killingTest>lapr.project.model.VehicleTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Vehicle.java</sourceFile><mutatedClass>lapr.project.model.Vehicle</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>21</block><killingTest>lapr.project.model.VehicleTest.testToString()</killingTest><description>mutated return of Object value for lapr/project/model/Vehicle::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testEquals2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.CapacityTest.testEquals2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>lapr.project.model.CapacityTest.testEquals3()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>8</block><killingTest>lapr.project.model.CapacityTest.testEquals4()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>9</block><killingTest>lapr.project.model.CapacityTest.testEquals5()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.CapacityTest.testEquals1()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>lapr.project.model.CapacityTest.testEquals2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>lapr.project.model.CapacityTest.testEquals3()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>12</block><killingTest>lapr.project.model.CapacityTest.testEquals4()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>getAvailability</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testGetAvailability()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>getCapacityMax</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testGetCapacityMax()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>getType</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testGetType()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Capacity.java</sourceFile><mutatedClass>lapr.project.model.Capacity</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>0</block><killingTest>lapr.project.model.CapacityTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ParkTest.testEquals2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.ParkTest.testEquals2()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>lapr.project.model.ParkTest.testEquals5()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest>lapr.project.model.ParkTest.testEquals5()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.ParkTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>lapr.project.model.ParkTest.testEquals2()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>10</block><killingTest>lapr.project.model.ParkTest.testEquals5()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>getCapacity</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>lapr.project.model.ParkTest.testGetCapacity()</killingTest><description>mutated return of Object value for lapr/project/model/Park::getCapacity to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>getId</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ParkTest.testGetId()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>getParkInputCurrent</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ParkTest.testGetParkInputCurrent()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>getParkInputVoltage</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ParkTest.testGetParkInputVoltage()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>getRefPark</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ParkTest.testGetRefPark()</killingTest><description>mutated return of Object value for lapr/project/model/Park::getRefPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.ParkTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest>lapr.project.model.ParkTest.testHashCode2()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>0</block><killingTest>lapr.project.model.ParkTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Park.java</sourceFile><mutatedClass>lapr.project.model.Park</mutatedClass><mutatedMethod>isState</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ParkTest.testIsState()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.BicycleTest.test5Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.BicycleTest.test4Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>lapr.project.model.BicycleTest.test4Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>10</block><killingTest>lapr.project.model.BicycleTest.test4Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.BicycleTest.test3Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTest>lapr.project.model.BicycleTest.test2Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>7</block><killingTest>lapr.project.model.BicycleTest.testEquals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>13</block><killingTest>lapr.project.model.BicycleTest.test4Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>getWheelSize</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.BicycleTest.testSetWheelSize()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Bicycle::getWheelSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.BicycleTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTest>lapr.project.model.BicycleTest.testHashCode()</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTest>lapr.project.model.BicycleTest.testHashCode()</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>lapr.project.model.BicycleTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>4</block><killingTest>lapr.project.model.BicycleTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Bicycle.java</sourceFile><mutatedClass>lapr.project.model.Bicycle</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>5</block><killingTest>lapr.project.model.BicycleTest.testToString()</killingTest><description>mutated return of Object value for lapr/project/model/Bicycle::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>addBicycle</mutatedMethod><methodDescription>(IDILjava/lang/String;DDD)Llapr/project/model/Vehicle;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>3</block><killingTest>lapr.project.controller.VehicleControllerTest.testAddBicycle()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::addBicycle to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>addBicycle</mutatedMethod><methodDescription>(IDILjava/lang/String;DDD)Llapr/project/model/Vehicle;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest>lapr.project.controller.VehicleControllerTest.testAddBicycle()</killingTest><description>removed call to lapr/project/model/Bicycle::setId</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>addScooter</mutatedMethod><methodDescription>(IIIIIILjava/lang/String;DDD)Llapr/project/model/Vehicle;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>3</block><killingTest>lapr.project.controller.VehicleControllerTest.testAddScooter()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::addScooter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>addScooter</mutatedMethod><methodDescription>(IIIIIILjava/lang/String;DDD)Llapr/project/model/Vehicle;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>2</block><killingTest/><description>removed call to lapr/project/model/Scooter::setId</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getAllBicycles</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>2</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetAllBicycles()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getAllBicycles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getAllBicyclesOfPark</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>2</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetAllBicyclesOfPark()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getAllBicyclesOfPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getAllScootersOfPark</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>2</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetAllScootersOfPark()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getAllScootersOfPark to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getBicycleByDescription</mutatedMethod><methodDescription>(Ljava/lang/String;)Llapr/project/model/Bicycle;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetBicycleByDescription()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getBicycleByDescription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getById</mutatedMethod><methodDescription>(I)Llapr/project/model/Vehicle;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetById()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getById to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getScooterByDescription</mutatedMethod><methodDescription>(Ljava/lang/String;)Llapr/project/model/Scooter;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetScooterByDescription()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getScooterByDescription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getScootersDontHavecapacityToPerformEstimatedTrip</mutatedMethod><methodDescription>(IID)Ljava/util/List;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>2</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetScootersDontHavecapacityToPerformEstimatedTrip()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getScootersDontHavecapacityToPerformEstimatedTrip to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getUnlockedVehicles</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>2</block><killingTest>lapr.project.controller.VehicleControllerTest.testGetUnlockedVehicles()</killingTest><description>mutated return of Object value for lapr/project/controller/VehicleController::getUnlockedVehicles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>getVehicleByDescription</mutatedMethod><methodDescription>(Ljava/lang/String;)Llapr/project/model/Vehicle;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>mutated return of Object value for lapr/project/controller/VehicleController::getVehicleByDescription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>VehicleController.java</sourceFile><mutatedClass>lapr.project.controller.VehicleController</mutatedClass><mutatedMethod>removeVehicle</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.VehicleControllerTest.testRemoveVehicle()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.test2Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>lapr.project.model.PointInterestTest.test2Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTest>lapr.project.model.PointInterestTest.test5Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTest>lapr.project.model.PointInterestTest.test4Equals()</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTest>lapr.project.model.PointInterestTest.test3Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>6</block><killingTest>lapr.project.model.PointInterestTest.test2Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>10</block><killingTest>lapr.project.model.PointInterestTest.test4Equals()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>getDescription</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.testGetDescription()</killingTest><description>mutated return of Object value for lapr/project/model/PointInterest::getDescription to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>getGeoLocation</mutatedMethod><methodDescription>()Llapr/project/model/GeographicalLocation;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.testSetGeoLocation()</killingTest><description>mutated return of Object value for lapr/project/model/PointInterest::getGeoLocation to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>getIdPoint</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.testSetIdPoint()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.testHashCode()</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.testHashCode()</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>0</block><killingTest>lapr.project.model.PointInterestTest.testHashCode()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PointInterest.java</sourceFile><mutatedClass>lapr.project.model.PointInterest</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>5</block><killingTest/><description>mutated return of Object value for lapr/project/model/PointInterest::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Llapr/project/model/Rental;)I</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>4</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Llapr/project/model/Rental;)I</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getBeginDateHour</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testSetBeginDateHour()</killingTest><description>mutated return of Object value for lapr/project/model/Rental::getBeginDateHour to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getCost</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetCost()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Rental::getCost</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getDuration</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetDuration()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getEarnedPoints</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetEarnedPoints()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getEndDateHour</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetEndDateHour()</killingTest><description>mutated return of Object value for lapr/project/model/Rental::getEndDateHour to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getIdRental</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetIdRental()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getParkFrom</mutatedMethod><methodDescription>()Llapr/project/model/Park;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testSetParkFrom()</killingTest><description>mutated return of Object value for lapr/project/model/Rental::getParkFrom to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getParkTo</mutatedMethod><methodDescription>()Llapr/project/model/Park;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetParkTo()</killingTest><description>mutated return of Object value for lapr/project/model/Rental::getParkTo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getUser</mutatedMethod><methodDescription>()Llapr/project/model/User;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetUser()</killingTest><description>mutated return of Object value for lapr/project/model/Rental::getUser to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rental.java</sourceFile><mutatedClass>lapr.project.model.Rental</mutatedClass><mutatedMethod>getVehicle</mutatedMethod><methodDescription>()Llapr/project/model/Vehicle;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.RentalTest.testGetVehicle()</killingTest><description>mutated return of Object value for lapr/project/model/Rental::getVehicle to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>getRentalById</mutatedMethod><methodDescription>(I)Llapr/project/model/Rental;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.RentalControllerTest.testGetRentalById()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::getRentalById to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>getScootersWith10PercentageExtra</mutatedMethod><methodDescription>(Llapr/project/model/Park;Llapr/project/model/Park;Llapr/project/model/User;)Ljava/util/List;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>4</block><killingTest>lapr.project.controller.RentalControllerTest.testGetScootersWith10PercentageExtra()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::getScootersWith10PercentageExtra to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>getScootersWith10PercentageExtra</mutatedMethod><methodDescription>(Llapr/project/model/Park;Llapr/project/model/Park;Llapr/project/model/User;)Ljava/util/List;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTest/><description>removed call to java/sql/SQLException::printStackTrace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>getScootersWithMoreEnergy</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>2</block><killingTest>lapr.project.controller.RentalControllerTest.testGetScootersWithMoreEnergy()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::getScootersWithMoreEnergy to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>getUnfinishedTrips</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>lapr.project.controller.RentalControllerTest.testGetUnfinishedTrips()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::getUnfinishedTrips to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>makeRental</mutatedMethod><methodDescription>(Llapr/project/model/User;Llapr/project/model/Vehicle;Llapr/project/model/Park;)Llapr/project/model/Rental;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>5</block><killingTest>lapr.project.controller.RentalControllerTest.testMakeRental()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::makeRental to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>makeRental</mutatedMethod><methodDescription>(Llapr/project/model/User;Llapr/project/model/Vehicle;Llapr/project/model/Park;)Llapr/project/model/Rental;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>4</block><killingTest>lapr.project.controller.RentalControllerTest.testMakeRental()</killingTest><description>removed call to lapr/project/model/Rental::setIdRental</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>mostEfficientRoutePassingThroughPoints</mutatedMethod><methodDescription>(ILlapr/project/model/Vehicle;Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/util/ArrayList;IZLjava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTest>lapr.project.controller.RentalControllerTest.testMostEfficientRoutePassingThroughPoints()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::mostEfficientRoutePassingThroughPoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>mostEnergeticallyEfficientRoute</mutatedMethod><methodDescription>(ILlapr/project/model/Vehicle;Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;)Ljava/util/List;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>lapr.project.controller.RentalControllerTest.testMostEnergeticallyEfficientRoute()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::mostEnergeticallyEfficientRoute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>shortestRoute</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;I)Ljava/util/List;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>1</block><killingTest>lapr.project.controller.RentalControllerTest.testShortestRoute()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::shortestRoute to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RentalController.java</sourceFile><mutatedClass>lapr.project.controller.RentalController</mutatedClass><mutatedMethod>shortestRoutePassingThroughPoints</mutatedMethod><methodDescription>(Llapr/project/model/PointInterest;Llapr/project/model/PointInterest;Ljava/util/ArrayList;)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>1</block><killingTest>lapr.project.controller.RentalControllerTest.testShortestRoutePassingThroughPoints()</killingTest><description>mutated return of Object value for lapr/project/controller/RentalController::shortestRoutePassingThroughPoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getCreditCard</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testGetCreditCard()</killingTest><description>mutated return of Object value for lapr/project/model/User::getCreditCard to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getCyclingAverageSpeed</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testSetCyclingAverageSpeed()</killingTest><description>replaced return of float value with -(x + 1) for lapr/project/model/User::getCyclingAverageSpeed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getEmail</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testGetEmail()</killingTest><description>mutated return of Object value for lapr/project/model/User::getEmail to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getGender</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testSetGender()</killingTest><description>mutated return of Object value for lapr/project/model/User::getGender to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testGetHeight()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getIdUser</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testGetIdUser()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getPoints</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testGetPoints()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getPwd</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testGetPwd()</killingTest><description>mutated return of Object value for lapr/project/model/User::getPwd to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getUsername</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testSetUsername()</killingTest><description>mutated return of Object value for lapr/project/model/User::getUsername to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>User.java</sourceFile><mutatedClass>lapr.project.model.User</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.UserTest.testSetWeight()</killingTest><description>replaced return of float value with -(x + 1) for lapr/project/model/User::getWeight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>addUser</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FIFLjava/lang/String;Ljava/lang/String;)Llapr/project/model/User;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>3</block><killingTest>lapr.project.controller.UserControllerTest.testAddUser()</killingTest><description>mutated return of Object value for lapr/project/controller/UserController::addUser to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>addUser</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FIFLjava/lang/String;Ljava/lang/String;)Llapr/project/model/User;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>2</block><killingTest>lapr.project.controller.UserControllerTest.testAddUser()</killingTest><description>removed call to lapr/project/model/User::setIdUser</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>calculateAmountCalories</mutatedMethod><methodDescription>(Ljava/util/ArrayList;II)D</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>1</block><killingTest>lapr.project.controller.UserControllerTest.testCalculateAmountCalories()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/controller/UserController::calculateAmountCalories</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>getById</mutatedMethod><methodDescription>(I)Llapr/project/model/User;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.UserControllerTest.testGetById()</killingTest><description>mutated return of Object value for lapr/project/controller/UserController::getById to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>getUnpaidRentals</mutatedMethod><methodDescription>(I)Ljava/util/TreeMap;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.UserControllerTest.testGetUnpaidRentals()</killingTest><description>mutated return of Object value for lapr/project/controller/UserController::getUnpaidRentals to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>getUserByUsername</mutatedMethod><methodDescription>(Ljava/lang/String;)Llapr/project/model/User;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.UserControllerTest.testGetUserByUsername()</killingTest><description>mutated return of Object value for lapr/project/controller/UserController::getUserByUsername to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>getUserHistorical</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.UserControllerTest.testGetUserHistorical()</killingTest><description>mutated return of Object value for lapr/project/controller/UserController::getUserHistorical to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UserController.java</sourceFile><mutatedClass>lapr.project.controller.UserController</mutatedClass><mutatedMethod>login</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Llapr/project/model/User;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>2</block><killingTest>lapr.project.controller.UserControllerTest.testLogin()</killingTest><description>mutated return of Object value for lapr/project/controller/UserController::login to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceLine.java</sourceFile><mutatedClass>lapr.project.model.InvoiceLine</mutatedClass><mutatedMethod>getDate</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceLineTest.testGetDate()</killingTest><description>mutated return of Object value for lapr/project/model/InvoiceLine::getDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceLine.java</sourceFile><mutatedClass>lapr.project.model.InvoiceLine</mutatedClass><mutatedMethod>getEarnedPoints</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceLineTest.testGetEarnedPoints()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceLine.java</sourceFile><mutatedClass>lapr.project.model.InvoiceLine</mutatedClass><mutatedMethod>getIdRental</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceLineTest.testGetIdRental()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceLine.java</sourceFile><mutatedClass>lapr.project.model.InvoiceLine</mutatedClass><mutatedMethod>getIdVehicle</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceLineTest.testGetIdVehicle()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceLine.java</sourceFile><mutatedClass>lapr.project.model.InvoiceLine</mutatedClass><mutatedMethod>getRentalCost</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceLineTest.testSetRentalCost()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/InvoiceLine::getRentalCost</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceLine.java</sourceFile><mutatedClass>lapr.project.model.InvoiceLine</mutatedClass><mutatedMethod>getRentalDuration</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceLineTest.testGetRentalDuration()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/InvoiceLine::getRentalDuration</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Path.java</sourceFile><mutatedClass>lapr.project.model.Path</mutatedClass><mutatedMethod>getKineticCoefficient</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PathTest.testGetKineticCoefficient()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Path::getKineticCoefficient</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Path.java</sourceFile><mutatedClass>lapr.project.model.Path</mutatedClass><mutatedMethod>getPointFrom</mutatedMethod><methodDescription>()Llapr/project/model/PointInterest;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PathTest.testSetPointFrom()</killingTest><description>mutated return of Object value for lapr/project/model/Path::getPointFrom to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Path.java</sourceFile><mutatedClass>lapr.project.model.Path</mutatedClass><mutatedMethod>getPointTo</mutatedMethod><methodDescription>()Llapr/project/model/PointInterest;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PathTest.testSetPointTo()</killingTest><description>mutated return of Object value for lapr/project/model/Path::getPointTo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Path.java</sourceFile><mutatedClass>lapr.project.model.Path</mutatedClass><mutatedMethod>getWindDirection</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PathTest.testGetWindDirection()</killingTest><description>replaced return of float value with -(x + 1) for lapr/project/model/Path::getWindDirection</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Path.java</sourceFile><mutatedClass>lapr.project.model.Path</mutatedClass><mutatedMethod>getWindSpeed</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.PathTest.testGetWindSpeed()</killingTest><description>replaced return of float value with -(x + 1) for lapr/project/model/Path::getWindSpeed</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Receipt.java</sourceFile><mutatedClass>lapr.project.model.Receipt</mutatedClass><mutatedMethod>getDate</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ReceiptTest.testGetDate()</killingTest><description>mutated return of Object value for lapr/project/model/Receipt::getDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Receipt.java</sourceFile><mutatedClass>lapr.project.model.Receipt</mutatedClass><mutatedMethod>getIdInvoice</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ReceiptTest.testSetIdInvoice()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Receipt.java</sourceFile><mutatedClass>lapr.project.model.Receipt</mutatedClass><mutatedMethod>getIdReceipt</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ReceiptTest.testGetIdReceipt()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Receipt.java</sourceFile><mutatedClass>lapr.project.model.Receipt</mutatedClass><mutatedMethod>getIdUser</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ReceiptTest.testGetIdUser()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Receipt.java</sourceFile><mutatedClass>lapr.project.model.Receipt</mutatedClass><mutatedMethod>getTotalCost</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.ReceiptTest.testGetTotalCost()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Receipt::getTotalCost</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Invoice.java</sourceFile><mutatedClass>lapr.project.model.Invoice</mutatedClass><mutatedMethod>getIdInvoice</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceTest.testGetIdInvoice()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Invoice.java</sourceFile><mutatedClass>lapr.project.model.Invoice</mutatedClass><mutatedMethod>getIssueDate</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceTest.testGetIssueDate()</killingTest><description>mutated return of Object value for lapr/project/model/Invoice::getIssueDate to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Invoice.java</sourceFile><mutatedClass>lapr.project.model.Invoice</mutatedClass><mutatedMethod>getTotalPrice</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceTest.testGetTotalPrice()</killingTest><description>replaced return of double value with -(x + 1) for lapr/project/model/Invoice::getTotalPrice</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Invoice.java</sourceFile><mutatedClass>lapr.project.model.Invoice</mutatedClass><mutatedMethod>getidUser</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>lapr.project.model.InvoiceTest.testGetIdUser()</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceController.java</sourceFile><mutatedClass>lapr.project.controller.InvoiceController</mutatedClass><mutatedMethod>addInvoice</mutatedMethod><methodDescription>(II)Llapr/project/model/Invoice;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>3</block><killingTest>lapr.project.controller.InvoiceControllerTest.testAddInvoice()</killingTest><description>mutated return of Object value for lapr/project/controller/InvoiceController::addInvoice to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>InvoiceController.java</sourceFile><mutatedClass>lapr.project.controller.InvoiceController</mutatedClass><mutatedMethod>addInvoice</mutatedMethod><methodDescription>(II)Llapr/project/model/Invoice;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest/><description>removed call to lapr/project/model/Invoice::setIdInvoice</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceController.java</sourceFile><mutatedClass>lapr.project.controller.InvoiceController</mutatedClass><mutatedMethod>getById</mutatedMethod><methodDescription>(I)Llapr/project/model/Invoice;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.InvoiceControllerTest.testGetById()</killingTest><description>mutated return of Object value for lapr/project/controller/InvoiceController::getById to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoiceController.java</sourceFile><mutatedClass>lapr.project.controller.InvoiceController</mutatedClass><mutatedMethod>getInvoiceLinesOfInvoice</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>lapr.project.controller.InvoiceControllerTest.testGetInvoiceLinesOfInvoice()</killingTest><description>mutated return of Object value for lapr/project/controller/InvoiceController::getInvoiceLinesOfInvoice to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoicePaymentController.java</sourceFile><mutatedClass>lapr.project.controller.InvoicePaymentController</mutatedClass><mutatedMethod>generateReceipt</mutatedMethod><methodDescription>(I)Llapr/project/model/Receipt;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.InvoicePaymentControllerTest.testGenerateReceipt()</killingTest><description>mutated return of Object value for lapr/project/controller/InvoicePaymentController::generateReceipt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InvoicePaymentController.java</sourceFile><mutatedClass>lapr.project.controller.InvoicePaymentController</mutatedClass><mutatedMethod>getAllUnpaidInvoices</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>1</block><killingTest>lapr.project.controller.InvoicePaymentControllerTest.testgetAllUnpaidInvoices()</killingTest><description>mutated return of Object value for lapr/project/controller/InvoicePaymentController::getAllUnpaidInvoices to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InvoicePayment.java</sourceFile><mutatedClass>lapr.project.model.InvoicePayment</mutatedClass><mutatedMethod>directDebitFromCc</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InvoicePayment.java</sourceFile><mutatedClass>lapr.project.model.InvoicePayment</mutatedClass><mutatedMethod>payInvoice</mutatedMethod><methodDescription>(ID)Z</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
</mutations>
